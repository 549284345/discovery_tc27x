/**********************************************************************************************************************
 *  COPYRIGHT
 *  -------------------------------------------------------------------------------------------------------------------
 *
 *                This software is copyright protected and proprietary to Vector Informatik GmbH.
 *                Vector Informatik GmbH grants to you only those rights as set out in the license conditions.
 *                All other rights remain with Vector Informatik GmbH.
 *  -------------------------------------------------------------------------------------------------------------------
 *  FILE DESCRIPTION
 *  -------------------------------------------------------------------------------------------------------------------
 *          File:  Rte.oil
 *        Config:  discovery_ecu.dpa"
 *   ECU-Project:  P2P
 *
 *     Generator:  MICROSAR RTE Generator Version 4.14.0
 *                 RTE Core Version 1.14.0
 *       License:  Unlimited license CBD1800319 for Tong Ji University
 *
 *   Description:  OIL-File containing project specific OS definitions for the MICROSAR RTE
 *********************************************************************************************************************/

/**********************************************************************************************************************
 *                                              P L E A S E   N O T E
 *
 * The attributes in this file must not be changed. Missing mandatory attributes must be set in the including file.
 * They are presented as a comment in the corresponding object definition containing a list of all legal values.
 *********************************************************************************************************************/

   TASK Core0_OsTask_1ms {
      ACTIVATION = 1:"@RO@";
      PRIORITY = 50:"@RO@";
      SCHEDULE = NON:"@RO@";
// TIMING_PROTECTION = FALSE|TRUE; (AUTOSAR OS only)
      AUTOSTART = FALSE:"@RO@";
      ACCESSING_APPLICATION = Untrusted_BSW_Core1;
      ACCESSING_APPLICATION = Untrusted_BSW_Core2;
   }:"@RO@@NR@";

   ALARM Rte_Al_TE_Cycle_Task_1ms_Core0_Task_1ms {
      COUNTER = SystemTimer_Core0;
      ACTION = ACTIVATETASK
      {
         TASK = Core0_OsTask_1ms;
      }:"@ROC@";
      AUTOSTART = FALSE:"@RO@";
      ACCESSING_APPLICATION = Untrusted_BSW_Core1;
      ACCESSING_APPLICATION = Untrusted_BSW_Core2;
   }:"@RO@@NR@";

   TASK Default_BSW_Async_Task_Core0 {
      ACTIVATION = 1:"@RO@";
      PRIORITY = 30:"@RO@";
      SCHEDULE = NON:"@RO@";
// TIMING_PROTECTION = FALSE|TRUE; (AUTOSAR OS only)
      AUTOSTART = FALSE:"@RO@";
      EVENT = Rte_Ev_Cyclic2_Default_BSW_Async_Task_Core0_0_10ms:"@RO@";
      EVENT = Rte_Ev_Cyclic2_Default_BSW_Async_Task_Core0_0_20ms:"@RO@";
      EVENT = Rte_Ev_Run_LinIf_LinIf_MainFunction:"@RO@";
      EVENT = Rte_Ev_Run_disc_ecu_Core0_Task_100ms:"@RO@";
      EVENT = Rte_Ev_Run_disc_ecu_Core0_Task_10ms:"@RO@";
      EVENT = Rte_Ev_Run_disc_ecu_Core0_Task_20ms:"@RO@";
      EVENT = Rte_Ev_Run_disc_ecu_Core0_Task_50ms:"@RO@";
      ACCESSING_APPLICATION = Untrusted_BSW_Core1;
      ACCESSING_APPLICATION = Untrusted_BSW_Core2;
   }:"@RO@@NR@";

   ALARM Rte_Al_TE2_Default_BSW_Async_Task_Core0_0_10ms {
      COUNTER = SystemTimer_Core0;
      ACTION = SETEVENT
      {
         TASK = Default_BSW_Async_Task_Core0;
         EVENT = Rte_Ev_Cyclic2_Default_BSW_Async_Task_Core0_0_10ms;
      }:"@ROC@";
      AUTOSTART = FALSE:"@RO@";
      ACCESSING_APPLICATION = Untrusted_BSW_Core1;
      ACCESSING_APPLICATION = Untrusted_BSW_Core2;
   }:"@RO@@NR@";

   ALARM Rte_Al_TE2_Default_BSW_Async_Task_Core0_0_20ms {
      COUNTER = SystemTimer_Core0;
      ACTION = SETEVENT
      {
         TASK = Default_BSW_Async_Task_Core0;
         EVENT = Rte_Ev_Cyclic2_Default_BSW_Async_Task_Core0_0_20ms;
      }:"@ROC@";
      AUTOSTART = FALSE:"@RO@";
      ACCESSING_APPLICATION = Untrusted_BSW_Core1;
      ACCESSING_APPLICATION = Untrusted_BSW_Core2;
   }:"@RO@@NR@";

   ALARM Rte_Al_TE_LinIf_LinIf_MainFunction {
      COUNTER = SystemTimer_Core0;
      ACTION = SETEVENT
      {
         TASK = Default_BSW_Async_Task_Core0;
         EVENT = Rte_Ev_Run_LinIf_LinIf_MainFunction;
      }:"@ROC@";
      AUTOSTART = FALSE:"@RO@";
      ACCESSING_APPLICATION = Untrusted_BSW_Core1;
      ACCESSING_APPLICATION = Untrusted_BSW_Core2;
   }:"@RO@@NR@";

   ALARM Rte_Al_TE_disc_ecu_Core0_Task_100ms {
      COUNTER = SystemTimer_Core0;
      ACTION = SETEVENT
      {
         TASK = Default_BSW_Async_Task_Core0;
         EVENT = Rte_Ev_Run_disc_ecu_Core0_Task_100ms;
      }:"@ROC@";
      AUTOSTART = FALSE:"@RO@";
      ACCESSING_APPLICATION = Untrusted_BSW_Core1;
      ACCESSING_APPLICATION = Untrusted_BSW_Core2;
   }:"@RO@@NR@";

   ALARM Rte_Al_TE_disc_ecu_Core0_Task_10ms {
      COUNTER = SystemTimer_Core0;
      ACTION = SETEVENT
      {
         TASK = Default_BSW_Async_Task_Core0;
         EVENT = Rte_Ev_Run_disc_ecu_Core0_Task_10ms;
      }:"@ROC@";
      AUTOSTART = FALSE:"@RO@";
      ACCESSING_APPLICATION = Untrusted_BSW_Core1;
      ACCESSING_APPLICATION = Untrusted_BSW_Core2;
   }:"@RO@@NR@";

   ALARM Rte_Al_TE_disc_ecu_Core0_Task_20ms {
      COUNTER = SystemTimer_Core0;
      ACTION = SETEVENT
      {
         TASK = Default_BSW_Async_Task_Core0;
         EVENT = Rte_Ev_Run_disc_ecu_Core0_Task_20ms;
      }:"@ROC@";
      AUTOSTART = FALSE:"@RO@";
      ACCESSING_APPLICATION = Untrusted_BSW_Core1;
      ACCESSING_APPLICATION = Untrusted_BSW_Core2;
   }:"@RO@@NR@";

   ALARM Rte_Al_TE_disc_ecu_Core0_Task_50ms {
      COUNTER = SystemTimer_Core0;
      ACTION = SETEVENT
      {
         TASK = Default_BSW_Async_Task_Core0;
         EVENT = Rte_Ev_Run_disc_ecu_Core0_Task_50ms;
      }:"@ROC@";
      AUTOSTART = FALSE:"@RO@";
      ACCESSING_APPLICATION = Untrusted_BSW_Core1;
      ACCESSING_APPLICATION = Untrusted_BSW_Core2;
   }:"@RO@@NR@";

   TASK Default_BSW_Async_Task_Core1 {
      ACTIVATION = 1:"@RO@";
      PRIORITY = 25:"@RO@";
      SCHEDULE = NON:"@RO@";
// TIMING_PROTECTION = FALSE|TRUE; (AUTOSAR OS only)
      AUTOSTART = FALSE:"@RO@";
      ACCESSING_APPLICATION = Untrusted_BSW_Core0;
      ACCESSING_APPLICATION = Untrusted_BSW_Core2;
   }:"@RO@@NR@";

   ALARM Rte_Al_TE2_EcuM_EcuM_MainFunction {
      COUNTER = SystemTimer_Core1;
      ACTION = ACTIVATETASK
      {
         TASK = Default_BSW_Async_Task_Core1;
      }:"@ROC@";
      AUTOSTART = FALSE:"@RO@";
      ACCESSING_APPLICATION = Untrusted_BSW_Core0;
      ACCESSING_APPLICATION = Untrusted_BSW_Core2;
   }:"@RO@@NR@";

   TASK Default_BSW_Async_Task_Core2 {
      ACTIVATION = 1:"@RO@";
      PRIORITY = 20:"@RO@";
      SCHEDULE = NON:"@RO@";
// TIMING_PROTECTION = FALSE|TRUE; (AUTOSAR OS only)
      AUTOSTART = FALSE:"@RO@";
      ACCESSING_APPLICATION = Untrusted_BSW_Core0;
      ACCESSING_APPLICATION = Untrusted_BSW_Core1;
   }:"@RO@@NR@";

   ALARM Rte_Al_TE3_EcuM_EcuM_MainFunction {
      COUNTER = SystemTimer_Core2;
      ACTION = ACTIVATETASK
      {
         TASK = Default_BSW_Async_Task_Core2;
      }:"@ROC@";
      AUTOSTART = FALSE:"@RO@";
      ACCESSING_APPLICATION = Untrusted_BSW_Core0;
      ACCESSING_APPLICATION = Untrusted_BSW_Core1;
   }:"@RO@@NR@";

   EVENT Rte_Ev_Cyclic2_Default_BSW_Async_Task_Core0_0_10ms {
      MASK = AUTO;
   }:"@ROC@@NR@";

   EVENT Rte_Ev_Cyclic2_Default_BSW_Async_Task_Core0_0_20ms {
      MASK = AUTO;
   }:"@ROC@@NR@";

   EVENT Rte_Ev_Run_LinIf_LinIf_MainFunction {
      MASK = AUTO;
   }:"@ROC@@NR@";

   EVENT Rte_Ev_Run_disc_ecu_Core0_Task_100ms {
      MASK = AUTO;
   }:"@ROC@@NR@";

   EVENT Rte_Ev_Run_disc_ecu_Core0_Task_10ms {
      MASK = AUTO;
   }:"@ROC@@NR@";

   EVENT Rte_Ev_Run_disc_ecu_Core0_Task_20ms {
      MASK = AUTO;
   }:"@ROC@@NR@";

   EVENT Rte_Ev_Run_disc_ecu_Core0_Task_50ms {
      MASK = AUTO;
   }:"@ROC@@NR@";


   APPLICATION Untrusted_BSW_Core0 {
      TRUSTED = TRUE;
// Add the following four attributes according to your needs.
// Note: They do not have a default value and are therefore necessary in the configuration.
//      STARTUPHOOK = FALSE;
//      SHUTDOWNHOOK = FALSE;
//      ERRORHOOK = FALSE;
//      HAS_RESTARTTASK = FALSE;
      TASK = Core0_OsTask_1ms;
      ALARM = Rte_Al_TE_Cycle_Task_1ms_Core0_Task_1ms;
      TASK = Default_BSW_Async_Task_Core0;
      ALARM = Rte_Al_TE2_Default_BSW_Async_Task_Core0_0_10ms;
      ALARM = Rte_Al_TE2_Default_BSW_Async_Task_Core0_0_20ms;
      ALARM = Rte_Al_TE_LinIf_LinIf_MainFunction;
      ALARM = Rte_Al_TE_disc_ecu_Core0_Task_100ms;
      ALARM = Rte_Al_TE_disc_ecu_Core0_Task_10ms;
      ALARM = Rte_Al_TE_disc_ecu_Core0_Task_20ms;
      ALARM = Rte_Al_TE_disc_ecu_Core0_Task_50ms;
      CORE = 0;
  };

   APPLICATION Untrusted_BSW_Core1 {
      TRUSTED = TRUE;
// Add the following four attributes according to your needs.
// Note: They do not have a default value and are therefore necessary in the configuration.
//      STARTUPHOOK = FALSE;
//      SHUTDOWNHOOK = FALSE;
//      ERRORHOOK = FALSE;
//      HAS_RESTARTTASK = FALSE;
      TASK = Default_BSW_Async_Task_Core1;
      ALARM = Rte_Al_TE2_EcuM_EcuM_MainFunction;
      CORE = 1;
  };

   APPLICATION Untrusted_BSW_Core2 {
      TRUSTED = TRUE;
// Add the following four attributes according to your needs.
// Note: They do not have a default value and are therefore necessary in the configuration.
//      STARTUPHOOK = FALSE;
//      SHUTDOWNHOOK = FALSE;
//      ERRORHOOK = FALSE;
//      HAS_RESTARTTASK = FALSE;
      TASK = Default_BSW_Async_Task_Core2;
      ALARM = Rte_Al_TE3_EcuM_EcuM_MainFunction;
      CORE = 2;
  };
