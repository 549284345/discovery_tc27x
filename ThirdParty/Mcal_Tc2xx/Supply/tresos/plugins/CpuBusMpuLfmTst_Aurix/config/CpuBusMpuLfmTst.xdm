<?xml version='1.0'?>
<!--
/*******************************************************************************
**                                                                            **
** Copyright (C) Infineon Technologies (2014)                                 **
**                                                                            **
** All rights reserved.                                                       **
**                                                                            **
** This document contains proprietary information belonging to Infineon       **
** Technologies. Passing on and copying of this document, and communication   **
** of its contents is not permitted without prior written authorization.      **
**                                                                            **
********************************************************************************
**                                                                            **
**   $FILENAME   : CpuBusMpuLfmTst.xdm $                                      **
**                                                                            **
**   $CC VERSION : \main\27 $                                                 **
**                                                                            **
**   $DATE       : 2016-04-27 $                                               **
**                                                                            **
**  PLATFORM  : Infineon AURIX                                                **
**                                                                            **
**  VARIANT   : VariantLinkTime                                               **
**                                                                            **
**  AUTHOR    : SafeTlib Team                                                 **
**                                                                            **
**  VENDOR    : Infineon Technologies                                         **
**                                                                            **
**  TRACEABILITY:[cover parentID=]                                            **
**                                                                            **
**  DESCRIPTION  : XML Data Model for CpuBusMpuLfmTst driver                  **
**                                                                            **
**  [/cover]                                                                  **
**                                                                            **
**  SPECIFICATION(S) :                                                        **
**                                                                            **
**  MAY BE CHANGED BY USER [yes/no]: No                                       **
**                                                                            **
*******************************************************************************/
-->
<datamodel version="3.0" 
           xmlns="http://www.tresos.de/_projects/DataModel2/08/root.xsd" 
           xmlns:a="http://www.tresos.de/_projects/DataModel2/08/attribute.xsd" 
           xmlns:v="http://www.tresos.de/_projects/DataModel2/06/schema.xsd" 
           xmlns:d="http://www.tresos.de/_projects/DataModel2/06/data.xsd">

  <d:ctr type="AUTOSAR" factory="autosar"  
         xmlns:ad="http://www.tresos.de/_projects/DataModel2/08/admindata.xsd" 
         xmlns:icc="http://www.tresos.de/_projects/DataModel2/08/implconfigclass.xsd"
         xmlns:mt="http://www.tresos.de/_projects/DataModel2/11/multitest.xsd">
    <d:lst type="TOP-LEVEL-PACKAGES">
      <d:ctr name="AURIX" type="AR-PACKAGE">        
        <a:a name="UUID" value="93d9a111-9d4c-47b6-98cb-fe5aec24c8b0"/>
        <d:lst type="ELEMENTS">
          <d:chc name="CpuBusMpuLfmTst" type="AR-ELEMENT" value="MODULE-DEF">
            <v:ctr type="MODULE-DEF">
              <a:a name="RELEASE" value="asc:4.0"/>        
              <a:a name="UUID" value="03eaa8c5-137e-402e-823d-8d7776c1de4d"/>
              <v:var name="IMPLEMENTATION_CONFIG_VARIANT" type="ENUMERATION">
                <a:a name="LABEL" value="Config Variant"/>
                <a:da name="DEFAULT" value="VariantLinkTime"/>
                <a:da name="RANGE" value="VariantLinkTime"/>                
              </v:var>              
              <v:lst name="CpuBusMpuLfmTstConfigSet" type="MULTIPLE-CONFIGURATION-CONTAINER">
                <a:da name="MIN" value="1"/>
                <v:ctr name="CpuBusMpuLfmTstConfigSet" type="MULTIPLE-CONFIGURATION-CONTAINER">
                  <a:a name="DESC" 
                       value="This is the base container that contains the Link time selectable configuration parameters"/>
                  <a:a name="UUID" value="ccda81dc-46cf-4171-858b-7c947884702f"/>
				  
                  <v:lst name="CpuBusMpuLfmTstTestMemoryCpu0" type="MAP">
                    <a:da name="TOOLTIP" value="Defines the start addresses of eight memory ranges in CPU0 PSPR"/>                                    
                    <a:da name="MIN" value="8"/>
                    <a:da name="MAX" value="8"/>               
                    <v:ctr name="CpuBusMpuLfmTstTestMemoryCpu0" type="IDENTIFIABLE">
                      <a:a name="DESC" 
                       value="This container contains the Link time CpuBusMpuLfmTstTestMemoryCpu0 parameter"/>                         
                      <a:a name="UUID" 
                        value="97e6fd09-f2da-4944-b2e0-edc4dc70e5a3"/>
                      <v:var name="CpuBusMpuLfmTstTestMemoryCpu0" type="INTEGER">
                        <a:da name="TOOLTIP" value="Defines the start-address of the memory region used for this test"/>
                        <a:a name="DESC">
<a:v>These eight parameters specify the start address of eight memory areas in PSPR of the CPU core 0 
executing the test of 32bytes each. The CPU Bus MPU LFM test protects these eight memory ranges 
against bus accesses in order to check the Bus MPU. This memory must not be used by any other SW 
module until the CPU Bus MPU LFM has completed. 
It must be located to PSPR (the test will fail when this gets located to DSPR or LMURAM).
</a:v>
                        </a:a>
                        <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                             type="IMPLEMENTATIONCONFIGCLASS">
                          <icc:v class="Link">VariantLinkTime</icc:v>
                        </a:a>                                                   
                        <a:a name="ORIGIN" value="INFINEON_AURIX"/>
                        <a:a name="UUID" 
                             value="98ce928e-6ed1-5968-93b2-24d30b1fa4af"/>                        
                        <a:da name="DEFAULT" type="XPath" expr="ecu:get('Mcu.CPU0PSPRAddStart')"/>
                        <a:da name="INVALID" type="Multi">
                          <mt:xpath expr="((.) mod 32 != 0)"
                          true="Config Error in CpuBusMpuLfmTstTestMemoryCpu0. Address Should be 32-byte aligned."/>
                          <mt:range>                          
                          <mt:tst expr="&lt;=ecu:get('CpuBusMpuLfmtst.CPU0PSPRAddEnd')"/>
                          <mt:tst expr="&gt;=ecu:get('Mcu.CPU0PSPRAddStart')"/>
                          </mt:range>
                        </a:da>
                      </v:var>                
                        </v:ctr>
                      </v:lst>
					  
				<v:lst name="CpuBusMpuLfmTstTestMemoryCpu1" type="MAP">
					       <a:da name="ENABLE" type="XPath" expr="contains( ecu:get('CpuBusMpuLfmtst.Cpu1Available'), 'Yes' )"/>
                 <a:da name="EDITABLE" type="XPath" expr="ecu:get('CpuBusMpuLfmtst.Cpu1Available')='Yes'"/>					       
                 <a:da name="VISIBLE" type="XPath" expr="contains(ecu:get('CpuBusMpuLfmtst.Cpu1Available'), 'Yes' )"/>				
                    <a:da name="TOOLTIP" value="Defines the start addresses of eight memory ranges in CPU1 PSPR"/>                                    
                    <a:da name="MIN" value="8"/>
                    <a:da name="MAX" value="8"/>               
                    <v:ctr name="CpuBusMpuLfmTstTestMemoryCpu1" type="IDENTIFIABLE">
                      <a:a name="DESC" 
                       value="This container contains the Link time CpuBusMpuLfmTstTestMemoryCpu1 parameter"/>                         
                      <a:a name="UUID" 
                        value="97e6fd09-f2da-4944-b2e0-edc4dc70e5b3"/>
                      <v:var name="CpuBusMpuLfmTstTestMemoryCpu1" type="INTEGER">
                        <a:da name="TOOLTIP" value="Defines the start-address of the memory region used for this test"/>
                        <a:a name="DESC">
<a:v>These eight parameters specify the start address of eight memory areas in PSPR of the CPU core 1 
executing the test of 32bytes each. The CPU Bus MPU LFM test protects these eight memory ranges 
against bus accesses in order to check the Bus MPU. This memory must not be used by any other SW 
module until the CPU Bus MPU LFM has completed. 
It must be located to PSPR (the test will fail when this gets located to DSPR or LMURAM).
</a:v>
                        </a:a>
                        <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                             type="IMPLEMENTATIONCONFIGCLASS">
                          <icc:v class="Link">VariantLinkTime</icc:v>
                        </a:a>                                                   
                        <a:a name="ORIGIN" value="INFINEON_AURIX"/>
                        <a:a name="UUID" 
                             value="98ce928e-6ed1-5968-93b2-24d30b1fa4bf"/>
                        <a:da name="DEFAULT" type="XPath" expr="ecu:get('Mcu.CPU1PSPRAddStart')"/>
                        <a:da name="INVALID" type="Multi">
                          <mt:xpath expr="((.) mod 32 != 0)"
                          true="Config Error in CpuBusMpuLfmTstTestMemoryCpu1. Address Should be 32-byte aligned."/>
                          <mt:range>                          
                          <mt:tst expr="&lt;=ecu:get('CpuBusMpuLfmtst.CPU1PSPRAddEnd')"/>
                          <mt:tst expr="&gt;=ecu:get('Mcu.CPU1PSPRAddStart')"/>
                          </mt:range>
                        </a:da>
                      </v:var>                
                        </v:ctr>
                      </v:lst>
					  
					  <v:lst name="CpuBusMpuLfmTstTestMemoryCpu2" type="MAP">
					       <a:da name="ENABLE" type="XPath" expr="contains( ecu:get('CpuBusMpuLfmtst.Cpu2Available'), 'Yes' )"/>
                 <a:da name="EDITABLE" type="XPath" expr="ecu:get('CpuBusMpuLfmtst.Cpu2Available')='Yes'"/>						       
                 <a:da name="VISIBLE" type="XPath" expr="contains(ecu:get('CpuBusMpuLfmtst.Cpu2Available'), 'Yes' )"/>
                    <a:da name="TOOLTIP" value="Defines the start addresses of eight memory ranges in CPU2 PSPR"/>                                    
                    <a:da name="MIN" value="8"/>
                    <a:da name="MAX" value="8"/>               
                    <v:ctr name="CpuBusMpuLfmTstTestMemoryCpu2" type="IDENTIFIABLE">
                 <a:a name="DESC" 
                       value="This container contains the Link time CpuBusMpuLfmTstTestMemoryCpu2 parameter"/>                                          
                      <a:a name="UUID" 
                        value="97e6fd09-f2da-4944-b2e0-edc4dc70e5b4"/>
                      <v:var name="CpuBusMpuLfmTstTestMemoryCpu2" type="INTEGER">
                        <a:da name="TOOLTIP" value="Defines the start-address of the memory region used for this test"/>
                        <a:a name="DESC">
<a:v>These eight parameters specify the start address of eight memory areas in PSPR of the CPU core 2 
executing the test of 32bytes each. The CPU Bus MPU LFM test protects these eight memory ranges 
against bus accesses in order to check the Bus MPU. This memory must not be used by any other SW 
module until the CPU Bus MPU LFM has completed. 
It must be located to PSPR (the test will fail when this gets located to DSPR or LMURAM).
</a:v>
                        </a:a>
                        <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                             type="IMPLEMENTATIONCONFIGCLASS">
                          <icc:v class="Link">VariantLinkTime</icc:v>
                        </a:a>                                                   
                        <a:a name="ORIGIN" value="INFINEON_AURIX"/>
                        <a:a name="UUID" 
                             value="98ce928e-6ed1-5968-93b2-24d30b1fa4a0"/>
                        <a:da name="DEFAULT" type="XPath" expr="ecu:get('Mcu.CPU2PSPRAddStart')"/>
                        <a:da name="INVALID" type="Multi">
                          <mt:xpath expr="((.) mod 32 != 0)"
                          true="Config Error in CpuBusMpuLfmTstTestMemoryCpu2. Address Should be 32-byte aligned."/>
                          <mt:range>                          
                          <mt:tst expr="&lt;=ecu:get('CpuBusMpuLfmtst.CPU2PSPRAddEnd')"/>
                          <mt:tst expr="&gt;=ecu:get('Mcu.CPU2PSPRAddStart')"/>
                          </mt:range>
                        </a:da>
                      </v:var>                
                        </v:ctr>
                      </v:lst>

            
                    <v:ctr name="CpuBusMpuLfmTstUnauthorizedAddrCpu0" type="IDENTIFIABLE">
                      <a:a name="DESC" 
                       value="This container contains the Link time CpuBusMpuLfmTstUnauthorizedAddrCpu0 parameter"/>                         
                      <a:a name="UUID" 
                        value="97e6fd09-f2da-4944-b2e0-edc4dc70e5a4"/>
                      <v:var name="CpuBusMpuLfmTstUnauthorizedAddrCpu0" type="INTEGER">
                        <a:da name="TOOLTIP" value="PSPR address of the CPU core 0 not contained in any of the 8 test memory ranges"/>
                        <a:a name="DESC">
<a:v>The parameter is set to an address in the PSPR of the CPU core 0 
executing the test that is not contained in any of the eight 32 byte
memory ranges specified by CpuBusMpuLfmTstTestMemoryCpuX.
It is used to check a write access to an address outside of all
memory protection regions is blocked and a SMU alarm is
generated. It must be located to PSPR. The test fails if located to
DSPR or LMU.
</a:v>
                        </a:a>
                        <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                             type="IMPLEMENTATIONCONFIGCLASS">
                          <icc:v class="Link">VariantLinkTime</icc:v>
                        </a:a>                                                   
                        <a:a name="ORIGIN" value="INFINEON_AURIX"/>
                        <a:a name="UUID" 
                             value="98ce928e-6ed1-5968-93b2-24d30b1fa49e"/>
                        <a:da name="DEFAULT" type="XPath" expr="ecu:get('Mcu.CPU0PSPRAddStart')"/>
                        <a:da name="INVALID" type="Multi">
                          <mt:xpath expr="((.) mod 4 != 0)"
                          true="Config Error in CpuBusMpuLfmTstUnauthorizedAddrCpu0. Address Should be 32-bit aligned."/>
                          <mt:range>                          
                          <mt:tst expr="&lt;=ecu:get('CpuBusMpuLfmtst.CPU0PSPRAddEnd')"/>
                          <mt:tst expr="&gt;=ecu:get('Mcu.CPU0PSPRAddStart')"/>
                          </mt:range>
                        </a:da>
                      </v:var>                
                        </v:ctr>
 
        
                    <v:ctr name="CpuBusMpuLfmTstUnauthorizedAddrCpu1" type="IDENTIFIABLE">
					       <a:da name="ENABLE" type="XPath" expr="contains( ecu:get('CpuBusMpuLfmtst.Cpu1Available'), 'Yes' )"/>
                 <a:da name="EDITABLE" type="XPath" expr="ecu:get('CpuBusMpuLfmtst.Cpu1Available')='Yes'"/>					       
                 <a:da name="VISIBLE" type="XPath" expr="contains(ecu:get('CpuBusMpuLfmtst.Cpu1Available'), 'Yes' )"/>						
                      <a:a name="DESC" 
                       value="This container contains the Link time CpuBusMpuLfmTstUnauthorizedAddrCpu1 parameter"/>   
                      <a:a name="UUID" 
                        value="97e6fd09-f2da-4944-b2e0-edc4dc70e5c3"/>
                      <v:var name="CpuBusMpuLfmTstUnauthorizedAddrCpu1" type="INTEGER">
                        <a:da name="TOOLTIP" value="PSPR address of the CPU core 1 not contained in any of the 8 test memory ranges"/>
                        <a:a name="DESC">
<a:v>The parameter is set to an address in the PSPR of the CPU core 1 
executing the test that is not contained in any of the eight 32 byte
memory ranges specified by CpuBusMpuLfmTstTestMemoryCpuX.
It is used to check a write access to an address outside of all
memory protection regions is blocked and a SMU alarm is
generated. It must be located to PSPR. The test fails if located to
DSPR or LMU.
</a:v>
                        </a:a>
                        <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                             type="IMPLEMENTATIONCONFIGCLASS">
                          <icc:v class="Link">VariantLinkTime</icc:v>
                        </a:a>                                                   
                        <a:a name="ORIGIN" value="INFINEON_AURIX"/>
                        <a:a name="UUID" 
                             value="98ce928e-6ed1-5968-93b2-24d30b1fa49f"/>
                        <a:da name="DEFAULT" type="XPath" expr="ecu:get('Mcu.CPU1PSPRAddStart')"/>
                        <a:da name="INVALID" type="Multi">
                          <mt:xpath expr="((.) mod 4 != 0)"
                          true="Config Error in CpuBusMpuLfmTstUnauthorizedAddrCpu1. Address Should be 32-bit aligned."/>
                          <mt:range>                          
                          <mt:tst expr="&lt;=ecu:get('CpuBusMpuLfmtst.CPU1PSPRAddEnd')"/>
                          <mt:tst expr="&gt;=ecu:get('Mcu.CPU1PSPRAddStart')"/>
                          </mt:range>
                        </a:da>
                      </v:var>                
                        </v:ctr>
                 <v:ctr name="CpuBusMpuLfmTstUnauthorizedAddrCpu2" type="IDENTIFIABLE">
					       <a:da name="ENABLE" type="XPath" expr="contains( ecu:get('CpuBusMpuLfmtst.Cpu2Available'), 'Yes' )"/>
                 <a:da name="EDITABLE" type="XPath" expr="ecu:get('CpuBusMpuLfmtst.Cpu2Available')='Yes'"/>						       
                 <a:da name="VISIBLE" type="XPath" expr="contains(ecu:get('CpuBusMpuLfmtst.Cpu2Available'), 'Yes' )"/>					
                 <a:a name="DESC" 
                       value="This container contains the Link time CpuBusMpuLfmTstUnauthorizedAddrCpu2 parameter"/>                                          
                      <a:a name="UUID" 
                        value="97e6fd09-f2da-4944-b2e0-edc4dc70e5c4"/>
                      <v:var name="CpuBusMpuLfmTstUnauthorizedAddrCpu2" type="INTEGER">
                        <a:da name="TOOLTIP" value="PSPR address of the CPU core 2 not contained in any of the 8 test memory ranges"/>
                        <a:a name="DESC">
<a:v>The parameter is set to an address in the PSPR of the CPU core 2 
executing the test that is not contained in any of the eight 32 byte
memory ranges specified by CpuBusMpuLfmTstTestMemoryCpuX.
It is used to check a write access to an address outside of all
memory protection regions is blocked and a SMU alarm is
generated. It must be located to PSPR. The test fails if located to
DSPR or LMU.
</a:v>
                        </a:a>
                        <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                             type="IMPLEMENTATIONCONFIGCLASS">
                          <icc:v class="Link">VariantLinkTime</icc:v>
                        </a:a>                                                   
                        <a:a name="ORIGIN" value="INFINEON_AURIX"/>
                        <a:a name="UUID" 
                             value="98ce928e-6ed1-5968-93b2-24d30b1fa4b0"/>
                        <a:da name="DEFAULT" type="XPath" expr="ecu:get('Mcu.CPU2PSPRAddStart')"/>
                        <a:da name="INVALID" type="Multi">
                          <mt:xpath expr="((.) mod 4 != 0)"
                          true="Config Error in CpuBusMpuLfmTstUnauthorizedAddrCpu2. Address Should be 32-bit aligned."/>
                          <mt:range>                          
                          <mt:tst expr="&lt;=ecu:get('CpuBusMpuLfmtst.CPU2PSPRAddEnd')"/>
                          <mt:tst expr="&gt;=ecu:get('Mcu.CPU2PSPRAddStart')"/>
                          </mt:range>
                        </a:da>
                      </v:var>                
                        </v:ctr>

                    </v:ctr>
                  </v:lst>                
              </v:ctr>         
          </d:chc>
        </d:lst>
      </d:ctr>
    </d:lst>
  </d:ctr>
</datamodel>
